/**
 * This file contains valid/invalid values for use in testing
 * files generated by css-values.
 */

import {absoluteSizes} from './validators/isAbsoluteSize';
import {boxes} from './validators/isBox';
import {brStyles} from './validators/isBrStyle';
import {brWidths} from './validators/isBrWidth';
import {compositeStyles} from './validators/isCompositeStyle';
import {compositingOperators} from './validators/isCompositingOperator';
import {genericFamilies} from './validators/isGenericFamily';
import {maskingModes} from './validators/isMaskingMode';
import {numericFigureValues} from './validators/isNumericFigureValue';
import {numericFractionValues} from './validators/isNumericFractionValue';
import {numericSpacingValues} from './validators/isNumericSpacingValue';
import {relativeSizes} from './validators/isRelativeSize';
import {singleAnimationDirections} from './validators/isSingleAnimationDirection';
import {singleAnimationFillModes} from './validators/isSingleAnimationFillMode';
import {singleAnimationPlayStates} from './validators/isSingleAnimationPlayState';

export const absoluteSize = {
    valid: absoluteSizes,
    invalid: ['reallysmall', 'superduperlarge'],
};

export const angle = {
    valid: ['0', '90deg', '1turn', '100grad', '2rad'],
    invalid: ['1circle', 'halfturn', 'deg90'],
};

export const box = {
    valid: boxes,
    invalid: ['rock-box'],
};

export const brStyle = {
    valid: brStyles,
    invalid: ['groovy'],
};

export const brWidth = {
    valid: brWidths,
    invalid: ['huuuuge'],
};

export const compositeStyle = {
    valid: compositeStyles,
    invalid: ['clear-xor-copy'],
};

export const compositingOperator = {
    valid: compositingOperators,
    invalid: ['add-subtract'],
};

export const customIdent = {
    valid: ['Bond-007', 'alpha', '_-_', '\\1F638', '-B'],
    invalid: ['007-Bond', '0B', '--B', '-0'],
};

export const genericFamily = {
    valid: genericFamilies,
    invalid: ['such-font', 'many-ligatures'],
};

export const integer = {
    valid: ['10', '+10', '-10', '0', '+0', '-0'],
    invalid: ['12.0', '+---12', '3e4', '\\4E94', '_5'],
};

export const maskingMode = {
    valid: maskingModes,
    invalid: ['jim-carrey'],
};

export const negative = {
    valid: ['-10', '-1.0', '-1000'],
    invalid: ['10', '1.0', '1000'],
};

export const number = {
    valid: ['12', '4.01', '-456.8', '0.0', '+0.0', '-0.0', '.60', '10e3', '-3.4e-2'],
    invalid: ['12.', '+-12.2', '12.1.1'],
};

export const numericFigureValue = {
    valid: numericFigureValues,
    invalid: ['newnewstyle-nums'],
};

export const numericFractionValue = {
    valid: numericFractionValues,
    invalid: ['any-fractions'],
};

export const numericSpacingValue = {
    valid: numericSpacingValues,
    invalid: ['nummy-nums'],
};

export const percentage = {
    valid: ['1%', '88%', '99.99%', '+100%'],
    invalid: ['12.%', '42.2.3.4.7.8.1.2%'],
};

export const relativeSize = {
    valid: relativeSizes,
    invalid: ['larger-really-larger', 'smaller-still'],
};

export const singleAnimationDirection = {
    valid: singleAnimationDirections,
    invalid: ['alternate-normal-reverse'],
};

export const singleAnimationFillMode = {
    valid: singleAnimationFillModes,
    invalid: ['forwards-backwards'],
};

export const singleAnimationPlayState = {
    valid: singleAnimationPlayStates,
    invalid: ['running-paused'],
};

export const length = {
    valid: ['0', '16px', '1pc', '2.34254645654324rem'],
    invalid: ['16.px', 'px16', 'one rem'],
};

export const lengthPercentage = {
    valid: [...length.valid, ...percentage.valid],
    invalid: [...length.invalid, ...percentage.invalid],
};

export const time = {
    valid: ['2s', '1500ms', '0.75s'],
    invalid: ['2 seconds', '1000Î¼s', '10.s'],
};
